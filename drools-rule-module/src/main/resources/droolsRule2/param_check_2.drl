package droolsRule1;
import com.winnie.common.entity.QueryParam
import com.winnie.common.entity.ResultParam
import org.slf4j.LoggerFactory
import org.slf4j.Logger
import com.winnie.common.service.RuleDemoService


dialect "java"
 rule "rule23"
    salience 96
    when queryParam: QueryParam(paramSign!= null && paramSign.equals("*"))
          ruleDemoService: RuleDemoService()
          resultParam: ResultParam()
    then
           final Logger LOGGER = LoggerFactory.getLogger("乘法 规则引擎1");
           LOGGER.info("参数:param1="+queryParam.getParam1()+ ", param2="+queryParam.getParam2()+"; paramSign="+queryParam.getParamSign());
           resultParam.setResult(ruleDemoService.mulParam(queryParam));
 end


 rule "rule24"
     salience 95
     when queryParam: QueryParam(paramSign!= null && paramSign.equals("/"))
           ruleDemoService: RuleDemoService()
           resultParam: ResultParam()
     then
          final Logger LOGGER = LoggerFactory.getLogger("除法 规则引擎1");
          LOGGER.info("参数:param1="+queryParam.getParam1()+ ", param2="+queryParam.getParam2()+"; paramSign="+queryParam.getParamSign());
          resultParam.setResult(ruleDemoService.divParam(queryParam));
  end